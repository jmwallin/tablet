values=man_cols) +
scale_fill_manual(name="Age Group",
values=man_cols)
test.data <- data %>%
filter(time.step >= .5, time.step <= 2.5) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,word.type)
test.rts <- test.data %>%
filter(aoi == "Target") %>%
summarise(rt = min(time.step)) %>%
mutate(rt = rt - .5) %>%
filter(rt > 0)
test.props <- test.data %>%
filter(time.step >= .5) %>%
summarise(prop = sum(aoi=="Target")/(sum(aoi=="Target")+sum(aoi=="Competitor")))
test.data <- left_join(test.rts,test.props)
#summarize by subject
test.data.subj <- test.data %>%
summarise(kept = sum(!is.na(prop))/length(prop),
prop=na.mean(prop),
rt = na.mean(rt)) %>%
filter(kept >= .5) %>% # Throw out participants who don't have enough data
select(-kept) %>%
ungroup() %>%
mutate(word.type = factor(word.type),
trial.type = factor(ifelse(word.type=="Novel-Familiar","Novel","Familiar")))
#summarize by trial.type
test.data.trial <- test.data.subj %>%
group_by(age.grp,trial.type,word.type,add=FALSE) %>%
summarise_each(funs(na.mean,ci.low,ci.high),c(prop,rt))
quartz(width=6.5,height=4.5,title = "Test Data")
ggplot(test.data.trial,
aes(x=as.numeric(age.grp), y=rt_na.mean,colour=word.type))+
facet_wrap( ~ word.type) +
geom_pointrange(aes(ymin = rt_na.mean-rt_ci.high,
ymax = rt_na.mean+rt_ci.low),
position = position_dodge(.3),
size=.8)+
geom_line(aes(group=word.type)) +
scale_x_continuous(breaks=seq(1,4,1),
name = "Age(years)")+
# scale_y_continuous(limits = c(.2,1), breaks=seq(.2,1,.1),
#                     name = "Prop. Looks to Target vs. Competitor") +
theme_bw(base_size=18) +
theme(legend.position="none")+#c(.95,.6),legend.title=element_blank()) +
scale_color_manual(values=man_cols)
test.data <- data %>%
filter(time.step >= .3, time.step <= 2.5) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,word.type)
test.rts <- test.data %>%
filter(aoi == "Target") %>%
summarise(rt = min(time.step)) %>%
filter(rt > .3)
test.props <- test.data %>%
filter(time.step >= .5) %>%
summarise(prop = sum(aoi=="Target")/(sum(aoi=="Target")+sum(aoi=="Competitor")))
test.data <- left_join(test.rts,test.props)
#summarize by subject
test.data.subj <- test.data %>%
summarise(kept = sum(!is.na(prop))/length(prop),
prop=na.mean(prop),
rt = na.mean(rt)) %>%
filter(kept >= .5) %>% # Throw out participants who don't have enough data
select(-kept) %>%
ungroup() %>%
mutate(word.type = factor(word.type),
trial.type = factor(ifelse(word.type=="Novel-Familiar","Novel","Familiar")))
#summarize by trial.type
test.data.trial <- test.data.subj %>%
group_by(age.grp,trial.type,word.type,add=FALSE) %>%
summarise_each(funs(na.mean,ci.low,ci.high),c(prop,rt))
quartz(width=6.5,height=4.5,title = "Test Data")
ggplot(test.data.trial,
aes(x=as.numeric(age.grp), y=rt_na.mean,colour=word.type))+
facet_wrap( ~ word.type) +
geom_pointrange(aes(ymin = rt_na.mean-rt_ci.high,
ymax = rt_na.mean+rt_ci.low),
position = position_dodge(.3),
size=.8)+
geom_line(aes(group=word.type)) +
scale_x_continuous(breaks=seq(1,4,1),
name = "Age(years)")+
# scale_y_continuous(limits = c(.2,1), breaks=seq(.2,1,.1),
#                     name = "Prop. Looks to Target vs. Competitor") +
theme_bw(base_size=18) +
theme(legend.position="none")+#c(.95,.6),legend.title=element_blank()) +
scale_color_manual(values=man_cols)
quartz(width=6.5,height=4.5,title = "Test Data")
ggplot(test.data.trial,
aes(x=as.numeric(age.grp), y=prop_na.mean,colour=word.type))+
facet_wrap( ~ word.type) +
geom_pointrange(aes(ymin = prop_na.mean-prop_ci.high,
ymax = prop_na.mean+prop_ci.low),
position = position_dodge(.3),
size=.8)+
geom_hline(aes(yintercept=.5),lty=2)  +
geom_line(aes(group=word.type)) +
scale_x_continuous(breaks=seq(1,4,1),
name = "Age(years)")+
scale_y_continuous(limits = c(.2,1), breaks=seq(.2,1,.1),
name = "Prop. Looks to Target vs. Competitor") +
theme_bw(base_size=18) +
theme(legend.position="none")+#c(.95,.6),legend.title=element_blank()) +
scale_color_manual(values=man_cols)
quartz(width=10,height=3,title = "Test Looking")
ggplot(filter(timecourse.test,time.step==round(time.step,2)),
aes(x=time.step, y=roll.mean,
colour=age.grp, fill = age.grp))+
facet_grid(~ word.type) +
geom_ribbon(aes(ymin = roll.mean-roll.sem,
ymax = roll.mean+roll.sem),
alpha = .3, linetype = 0) +
geom_line(size=.8) +
geom_vline(aes(xintercept=0),lty=2) +
geom_hline(aes(yintercept=.5),lty=2)  +
scale_x_continuous(limits = c(-1.5,4.5),breaks=seq(-2,4.5,1),
name = "Time(s)") +
scale_y_continuous(limits = c(.25,1), breaks=seq(.25,1,.25),
name = "Prop. Looks to Target") +
theme_bw(base_size=14) +
guides(color = guide_legend(reverse = TRUE),
fill = guide_legend(reverse = TRUE)) +
scale_color_manual(name="Age Group",
values=man_cols) +
scale_fill_manual(name="Age Group",
values=man_cols)
test.data <- data %>%
filter(time.step >= .3, time.step <= 4.5) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,word.type)
test.rts <- test.data %>%
filter(aoi == "Target") %>%
summarise(rt = min(time.step)) %>%
filter(rt > .3)
test.props <- test.data %>%
filter(time.step >= .5) %>%
summarise(prop = sum(aoi=="Target")/(sum(aoi=="Target")+sum(aoi=="Competitor")))
test.data <- left_join(test.rts,test.props)
#summarize by subject
test.data.subj <- test.data %>%
summarise(kept = sum(!is.na(prop))/length(prop),
prop=na.mean(prop),
rt = na.mean(rt)) %>%
filter(kept >= .5) %>% # Throw out participants who don't have enough data
select(-kept) %>%
ungroup() %>%
mutate(word.type = factor(word.type),
trial.type = factor(ifelse(word.type=="Novel-Familiar","Novel","Familiar")))
#summarize by trial.type
test.data.trial <- test.data.subj %>%
group_by(age.grp,trial.type,word.type,add=FALSE) %>%
summarise_each(funs(na.mean,ci.low,ci.high),c(prop,rt))
quartz(width=6.5,height=4.5,title = "Test Data")
ggplot(test.data.trial,
aes(x=as.numeric(age.grp), y=prop_na.mean,colour=word.type))+
facet_wrap( ~ word.type) +
geom_pointrange(aes(ymin = prop_na.mean-prop_ci.high,
ymax = prop_na.mean+prop_ci.low),
position = position_dodge(.3),
size=.8)+
geom_hline(aes(yintercept=.5),lty=2)  +
geom_line(aes(group=word.type)) +
scale_x_continuous(breaks=seq(1,4,1),
name = "Age(years)")+
scale_y_continuous(limits = c(.2,1), breaks=seq(.2,1,.1),
name = "Prop. Looks to Target vs. Competitor") +
theme_bw(base_size=18) +
theme(legend.position="none")+#c(.95,.6),legend.title=element_blank()) +
scale_color_manual(values=man_cols)
head(test.data.trial)
head(data)
head(test.data)
head(data)
head(test.data.subj)
head(test.data)
# clear all previous variables
rm(list=ls())
#get lab version of useful R functions
source('~/Projects/Other/Ranalysis/useful_dplyr.R')
#load libraries for data manipulation and graphing
library(directlabels)
library(xtable)
library(magrittr)
#splits ages into half-years
split.ages <-function(x) {floor(x)}
#Constants for window-of-interest analysis
TEST_START <- 0
TEST_END <- 4.5
#Use color-brewer colors for graphing
man_cols <- c("#e41a1c","#377eb8","#4daf4a",
"#984ea3","#ff7f00","#a65628",
"#f781bf","#999999")
###############################################################################
################################ LOADING DATA #################################
###############################################################################
#read looking data
raw.fam.data <- read.csv("../MATLAB/tab_comp_fam_r.csv",header=TRUE)
raw.nov.data <- read.csv("../MATLAB/tab_comp_nov_r.csv",header=TRUE)
raw.data <- rbind(raw.fam.data,raw.nov.data)
data <- raw.data %>%
#pre-process data values to be more English-readable
rename(trial.type = trialType,
list.num = listNum,
time.step = TimeStep,
trial.tum = trialNum) %>%
mutate(
trial.type = factor(trial.type,
labels=c("Familiar", "Novel")),
aoi = as.character(factor(aoi, labels=c("Left", "Right","NA"))),
time.step = time.step/60 - 2,
gender = factor(gender,labels=c("Male","Female")),
age.grp = factor(split.ages(age))) %>%
filter(age >= 1)
head(raw.data)
data <- raw.data %>%
#pre-process data values to be more English-readable
rename(trial.type = trialType,
list.num = listNum,
time.step = timeStep,
trial.tum = trialNum) %>%
mutate(
trial.type = factor(trial.type,
labels=c("Familiar", "Novel")),
aoi = as.character(factor(aoi, labels=c("Left", "Right","NA"))),
time.step = time.step/60 - 2,
gender = factor(gender,labels=c("Male","Female")),
age.grp = factor(split.ages(age))) %>%
filter(age >= 1)
trial.codes <- read.csv("trial.codes.csv",header=TRUE,
stringsAsFactor = FALSE)
RT.MIN = .3
PROP.MIN = .5
#summarize across individual trials
data <- left_join(data,trial.codes) %>%
filter(time.step >= -1.5,
time.step <= TEST_END) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,word.type,
time.step)%>%
mutate(aoi = if(aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
test.data <- data %>%
filter(time.step >= RT.MIN) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,word.type)
test.rts <- test.data %>%
filter(aoi == "Target") %>%
summarise(rt = min(time.step)) %>%
filter(rt > RT.MIN)
test.props <- test.data %>%
filter(time.step >= PROP.MIN) %>%
summarise(prop = sum(aoi=="Target")/(sum(aoi=="Target")+sum(aoi=="Competitor")))
test.data <- left_join(test.rts,test.props)
head(test.data)
head(test.props)
head(test.rts)
head(test.data)
head(data)
data <- raw.data %>%
#pre-process data values to be more English-readable
rename(trial.type = trialType,
list.num = listNum,
time.step = timeStep,
trial.tum = trialNum) %>%
mutate(
trial.type = factor(trial.type,
labels=c("Familiar", "Novel")),
aoi = as.character(factor(aoi, labels=c("Left", "Right","NA"))),
time.step = time.step/60 - 2,
gender = factor(gender,labels=c("Male","Female")),
age.grp = factor(split.ages(age))) %>%
filter(age >= 1)
trial.codes <- read.csv("trial.codes.csv",header=TRUE,
stringsAsFactor = FALSE)
RT.MIN = .3
PROP.MIN = .5
nrow(data)
#summarize across individual trials
data <- left_join(data,trial.codes)
head(data)
data <- data %>%
filter(time.step >= -1.5,
time.step <= TEST_END) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,word.type,
time.step)%>%
mutate(aoi = if(aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
data <- raw.data %>%
#pre-process data values to be more English-readable
rename(trial.type = trialType,
list.num = listNum,
time.step = timeStep,
trial.tum = trialNum) %>%
mutate(
trial.type = factor(trial.type,
labels=c("Familiar", "Novel")),
aoi = as.character(factor(aoi, labels=c("Left", "Right","NA"))),
time.step = time.step/60 - 2,
gender = factor(gender,labels=c("Male","Female")),
age.grp = factor(split.ages(age))) %>%
filter(age >= 1)
data <- left_join(data,trial.codes) %>%
filter(time.step >= 0,
time.step <= TEST_END) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,word.type,
time.step)%>%
mutate(aoi = if(aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
warnings()
data <- raw.data %>%
#pre-process data values to be more English-readable
rename(trial.type = trialType,
list.num = listNum,
time.step = timeStep,
trial.tum = trialNum) %>%
mutate(
trial.type = factor(trial.type,
labels=c("Familiar", "Novel")),
aoi = as.character(factor(aoi, labels=c("Left", "Right","NA"))),
time.step = time.step/60 - 2,
gender = factor(gender,labels=c("Male","Female")),
age.grp = factor(split.ages(age))) %>%
filter(age >= 1)
head(data)
data <- left_join(data,trial.codes) %>%
filter(time.step >= TEST_START,
time.step <= TEST_END)
head(data)
head(data$subj)
tmp <- data %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,word.type,
time.step)
head(tmp)
tmp <- data %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,word.type,
time.step)%>%
mutate(aoi = if(aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
warnings()
head(data)
data <- raw.data %>%
#pre-process data values to be more English-readable
rename(trial.type = trialType,
list.num = listNum,
time.step = timeStep,
trial.Num = trialNum) %>%
mutate(
trial.type = factor(trial.type,
labels=c("Familiar", "Novel")),
aoi = as.character(factor(aoi, labels=c("Left", "Right","NA"))),
time.step = time.step/60 - 2,
gender = factor(gender,labels=c("Male","Female")),
age.grp = factor(split.ages(age))) %>%
filter(age >= 1)
#summarize across individual trials
data <- left_join(data,trial.codes) %>%
filter(time.step >= TEST_START,
time.step <= TEST_END) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,word.type,
time.step)%>%
mutate(aoi = if(aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
warnings()
head(data)
data <- raw.data %>%
#pre-process data values to be more English-readable
rename(trial.type = trialType,
list.num = listNum,
time.step = timeStep,
trial.num = trialNum) %>%
mutate(
trial.type = factor(trial.type,
labels=c("Familiar", "Novel")),
aoi = as.character(factor(aoi, labels=c("Left", "Right","NA"))),
time.step = time.step/60 - 2,
gender = factor(gender,labels=c("Male","Female")),
age.grp = factor(split.ages(age))) %>%
filter(age >= 1)
data <- left_join(data,trial.codes) %>%
filter(time.step >= TEST_START,
time.step <= TEST_END) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,word.type,
time.step)%>%
mutate(aoi = if(aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
head(data)
data <- left_join(data,trial.codes) %>%
filter(time.step >= TEST_START,
time.step <= TEST_END) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,word.type,
time.step)
head(data)
tmp <- data %>%
mutate(aoi = if(aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
head(data)
data <- raw.data %>%
#pre-process data values to be more English-readable
rename(trial.type = trialType,
list.num = listNum,
time.step = timeStep,
trial.num = trialNum) %>%
mutate(
trial.type = factor(trial.type,
labels=c("Familiar", "Novel")),
aoi = as.character(factor(aoi, labels=c("Left", "Right","NA"))),
time.step = time.step/60 - 2,
gender = factor(gender,labels=c("Male","Female")),
age.grp = factor(split.ages(age))) %>%
filter(age >= 1)
ata <- left_join(data,trial.codes) %>%
filter(time.step >= TEST_START,
time.step <= TEST_END) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,trial.type,
time.step)%>%
data <- left_join(data,trial.codes) %>%
filter(time.step >= TEST_START,
time.step <= TEST_END) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,trial.type,
time.step)
tmp <- data %>%
mutate(aoi = if(aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
head(data)
data$aoi
unique(data$aoi)
tmp <- data %>%
mutate(aoi = if(aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
?left_join
?transform
data <- left_join(data,trial.codes,all=TRUE) %>%
filter(time.step >= TEST_START,
time.step <= TEST_END) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,trial.type,
time.step)
tmp <- data %>%
mutate(aoi = if(aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
tmp <- data %>%
mutate(aoi = if(is.na(aoi) | aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
is.missing
tmp <- data %>%
mutate(aoi = if(is.na(aoi) | aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
data$aoi
tmp <- data %>%
mutate(aoi = if(is.na(aoi) | aoi == "NA") "NA"
else "Competitor")
tmp <- data %>%
mutate(aoi = if(is.na(aoi) | is.na(target) | aoi == "NA" | ) "NA"
else if(aoi== target) "Target"
else "Competitor")
tmp <- data %>%
mutate(aoi = if(is.na(aoi) | is.na(target) | aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
data <- left_join(data,trial.codes) %>%
filter(time.step >= TEST_START,
time.step <= TEST_END) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,trial.type,
time.step)%>%
mutate(aoi = if(is.na(aoi) | is.na(target) | aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
data <- raw.data %>%
#pre-process data values to be more English-readable
rename(trial.type = trialType,
list.num = listNum,
time.step = timeStep,
trial.num = trialNum) %>%
mutate(
trial.type = factor(trial.type,
labels=c("Familiar", "Novel")),
aoi = as.character(factor(aoi, labels=c("Left", "Right","NA"))),
time.step = time.step/60 - 2,
gender = factor(gender,labels=c("Male","Female")),
age.grp = factor(split.ages(age))) %>%
filter(age >= 1)
data <- left_join(data,trial.codes) %>%
filter(time.step >= TEST_START,
time.step <= TEST_END) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,trial.type,
time.step)%>%
mutate(aoi = if(is.na(aoi) | is.na(target) | aoi == "NA") "NA"
else if(aoi== target) "Target"
else "Competitor")
test.data <- data %>%
filter(time.step >= RT.MIN) %>%
group_by(list.num,word.type,age,age.grp,gender,subj,trial.num,word.type)
head(test.data)
?write.csv
write.csv(test.data,'eye.tracking.data')
test.rts <- test.data %>%
filter(aoi == "Target") %>%
summarise(rt = min(time.step)) %>%
filter(rt > RT.MIN)
test.props <- test.data %>%
filter(time.step >= PROP.MIN) %>%
summarise(prop = sum(aoi=="Target")/(sum(aoi=="Target")+sum(aoi=="Competitor")))
test.data <- left_join(test.rts,test.props)
head(test.data)
write.csv(test.data,'eye.tracking.data')
